{"version":3,"file":"static/js/653.712dbb5c.chunk.js","mappings":"qPACA,EAA4B,0BAA5B,EAA6D,qBAA7D,EAA0F,sBAA1F,EAA4H,0BAA5H,EAA8J,sBAA9J,EAA8L,wB,SC+D9L,EA5De,WACb,OAA0CA,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAMMC,EAAY,mCAAG,sGAEL,mCAFK,SAGMC,MAAM,qDAAD,OADhB,mCACgB,kBACwCL,IAJnD,cAGXM,EAHW,gBAMEA,EAASC,OANX,OAMXC,EANW,OAOjBL,EAAiBK,EAAKC,SAPL,kDASjBC,QAAQC,MAAM,6BAAd,MATiB,0DAAH,qDAoBlB,OACE,iBAAKC,UAAWC,EAAhB,WACE,2CACA,kBACEC,KAAK,OACLC,YAAY,uBACZC,MAAOhB,EACPiB,SA/B0B,SAAAC,GAC9BjB,EAAiBiB,EAAEC,OAAOH,MAC3B,KA+BG,mBAAQI,QAAShB,EAAjB,qBAEA,eAAIQ,UAAWC,EAAf,SACGX,EAAcmB,KAAI,SAAAC,GAAK,OACtB,yBACE,UAAC,KAAD,CAAMV,UAAWC,EAAWU,GAAE,kBAAaD,EAAME,IAAjD,WACE,gBACEC,IAAG,yCAAoCH,EAAMI,aAC7CC,IAAKL,EAAMM,MACXhB,UAAWC,KAEb,iBAAMD,UAAWC,EAAjB,UA3BIe,EA2BgCN,EAAMM,MA3B/BC,EA2BsC,GA1BvDD,EAAME,OAASD,EACVD,EAAMG,MAAM,EAAGF,GAAa,MAE9BD,SAgBQN,EAAME,IApBR,IAACI,EAAOC,CAmBO,OAa1B,SAAC,EAAAG,SAAD,CAAUC,UAAU,gBAAKrB,UAAWC,EAAhB,6BAApB,UACE,SAAC,KAAD,QAIP,C","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__sNK5N\",\"list\":\"Movies_list__JEO-P\",\"items\":\"Movies_items__nEE+m\",\"thumbnail\":\"Movies_thumbnail__WD88G\",\"title\":\"Movies_title__EqSqF\",\"loading\":\"Movies_loading__Ir3gm\"};","import { Suspense, useState } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearchInputChange = e => {\n    setSearchKeyword(e.target.value);\n  };\n\n  const handleSearch = async () => {\n    try {\n      const key = '0127585737a1692bc4e9c9e0b9997760';\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${searchKeyword}`\n      );\n      const data = await response.json();\n      setSearchResults(data.results);\n    } catch (error) {\n      console.error('Error while fetching data:', error);\n    }\n  };\n\n  const length = (title, maxLength) => {\n    if (title.length > maxLength) {\n      return title.slice(0, maxLength) + '...';\n    }\n    return title;\n  };\n\n  return (\n    <div className={css.container}>\n      <h2>Search Movies</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter search keyword\"\n        value={searchKeyword}\n        onChange={handleSearchInputChange}\n      />\n      <button onClick={handleSearch}>Search</button>\n\n      <ul className={css.list}>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link className={css.items} to={`/movies/${movie.id}`}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                alt={movie.title}\n                className={css.thumbnail}\n              />\n              <span className={css.title}>{length(movie.title, 20)}</span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Suspense fallback={<div className={css.loading}>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","searchKeyword","setSearchKeyword","searchResults","setSearchResults","handleSearch","fetch","response","json","data","results","console","error","className","css","type","placeholder","value","onChange","e","target","onClick","map","movie","to","id","src","poster_path","alt","title","maxLength","length","slice","Suspense","fallback"],"sourceRoot":""}